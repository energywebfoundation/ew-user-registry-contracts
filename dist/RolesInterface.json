{"abi":[{"constant":true,"inputs":[{"name":"_user","type":"address"}],"name":"getRolesRights","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_user","type":"address"}],"name":"doesUserExist","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"}],"bytecode":"","contractName":"RolesInterface","deployedBytecode":"","source":"// Copyright 2018 Energy Web Foundation\n// This file is part of the Origin Application brought to you by the Energy Web Foundation,\n// a global non-profit organization focused on accelerating blockchain technology across the energy sector, \n// incorporated in Zug, Switzerland.\n//\n// The Origin Application is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY and without an implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details, at <http://www.gnu.org/licenses/>.\n//\n// @authors: slock.it GmbH, Martin Kuechler, martin.kuchler@slock.it\n\npragma solidity ^0.4.24;\n\n/// @title this interface defines functions for defining functions of the user-logic in order to call them in different contracts\ninterface RolesInterface {\n   \n    /// @notice function to retrieve the rights of an user\n    /// @dev if the user does not exist in the mapping it will return 0x0 thus preventing them from accidently getting any rights\n    /// @param _user user someone wants to know its rights\n    /// @return bitmask with the rights of the user\n    function getRolesRights(address _user) external view returns (uint);\n\n    /// @notice function that checks if there is an user for the provided ethereum-address\n    /// @param _user ethereum-address of that user\n    /// @return bool if the user exists\n    function doesUserExist(address _user) external  view returns (bool);\n}","networks":"{}"}