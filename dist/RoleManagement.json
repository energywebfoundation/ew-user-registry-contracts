{"abi":[{"constant":true,"inputs":[],"name":"userContractLookup","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_newOwner","type":"address"}],"name":"changeOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_role","type":"uint8"},{"name":"_caller","type":"address"}],"name":"isRole","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_userContractLookup","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_newOwner","type":"address"}],"name":"LogChangeOwner","type":"event"}],"bytecode":"608060405234801561001057600080fd5b506040516020806105f98339810180604052810190808051906020019092919050505033806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610533806100c66000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806344724c8c146100675780638da5cb5b146100be578063a6f9dae114610115578063bb5a389e14610158575b600080fd5b34801561007357600080fd5b5061007c6101c0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100ca57600080fd5b506100d36101e6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012157600080fd5b50610156600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061020b565b005b34801561016457600080fd5b506101a6600480360381019080803560ff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610348565b604051808215151515815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561026657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156102a257600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f95fd54179c11867fb083dd94347ea50f144dd4cfd7612b7bca169f162824af1681604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c7460d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156103d357600080fd5b505af11580156103e7573d6000803e3d6000fd5b505050506040513d60208110156103fd57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663265209f2856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156104a857600080fd5b505af11580156104bc573d6000803e3d6000fd5b505050506040513d60208110156104d257600080fd5b810190808051906020019092919050505091508460068111156104f157fe5b60020a90506000818316141592505050929150505600a165627a7a723058201174123c788aff395a1764225f599e6028b983eed48dc1f793bc219c9ceb55580029","contractName":"RoleManagement","deployedBytecode":"608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806344724c8c146100675780638da5cb5b146100be578063a6f9dae114610115578063bb5a389e14610158575b600080fd5b34801561007357600080fd5b5061007c6101c0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100ca57600080fd5b506100d36101e6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012157600080fd5b50610156600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061020b565b005b34801561016457600080fd5b506101a6600480360381019080803560ff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610348565b604051808215151515815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561026657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156102a257600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f95fd54179c11867fb083dd94347ea50f144dd4cfd7612b7bca169f162824af1681604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c7460d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156103d357600080fd5b505af11580156103e7573d6000803e3d6000fd5b505050506040513d60208110156103fd57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663265209f2856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156104a857600080fd5b505af11580156104bc573d6000803e3d6000fd5b505050506040513d60208110156104d257600080fd5b810190808051906020019092919050505091508460068111156104f157fe5b60020a90506000818316141592505050929150505600a165627a7a723058201174123c788aff395a1764225f599e6028b983eed48dc1f793bc219c9ceb55580029","source":"// Copyright 2018 Energy Web Foundation\n// This file is part of the Origin Application brought to you by the Energy Web Foundation,\n// a global non-profit organization focused on accelerating blockchain technology across the energy sector, \n// incorporated in Zug, Switzerland.\n//\n// The Origin Application is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY and without an implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details, at <http://www.gnu.org/licenses/>.\n//\n// @authors: slock.it GmbH, Martin Kuechler, martin.kuechler@slock.it\npragma solidity ^0.4.24;\nimport \"../../contracts/Interfaces/UserContractLookupInterface.sol\";\nimport \"../../contracts/Interfaces/RolesInterface.sol\";\nimport \"ew-utils-general-contracts/Msc/Owned.sol\";\n\n/// @notice contract for managing the rights and roles\ncontract RoleManagement is Owned{\n\n    /// @notice all possible available roles\n    /*\n    no role:        0x0...000000\n    TopAdmin:       0x0...-----1\n    UserAdmin:      0x0...----1-\n    AssetAdmin:     0x0...---1--\n    AgreementAdmin: 0x0...--1---\n    AssetManager:   0x0...-1----\n    Tader:          0x0...1-----\n    */\n    enum Role{\n        TopAdmin, \n        UserAdmin,\n        AssetAdmin,\n        AgreementAdmin, \n        AssetManager,  \n        Trader, \n        Matcher\n    } \n\n    UserContractLookupInterface public userContractLookup;\n\n    /// @notice modifier for checking if an user is allowed to execute the intended action\n    modifier onlyRole (RoleManagement.Role _role) { \n        require (isRole(_role, msg.sender),\"user does not have the required role\"); \n        _; \n    }\n\n    modifier onlyAccount(address _accountAddress) {\n        require(msg.sender == _accountAddress,\"account is not accountAddress\");\n        _;\n    }\n\n    modifier userExists(address _user){\n        require(RolesInterface(userContractLookup.userRegistry()).doesUserExist(_user),\"User does not exist\");\n        _;\n    }\n\n    modifier userHasRole(RoleManagement.Role _role, address _user){\n        require (isRole(_role, _user),\"user does not have the required role\"); \n        _; \n    }\n\n    /// @notice constructor \n    constructor(UserContractLookupInterface _userContractLookup) Owned(msg.sender) public {\n        userContractLookup = _userContractLookup;\n    }\n\n    /// @notice funciton for comparing the role and the needed rights of an user\n    /// @param _role role of a user\n    /// @return whether the user has the corresponding rights for the intended action\n    function isRole(RoleManagement.Role _role, address _caller) public view returns (bool) { \n\n        /// @dev reading the rights for the user from the userDB-contract\n        uint rights = RolesInterface(userContractLookup.userRegistry()).getRolesRights(_caller);\n        /// @dev converting the used enum to the corresponding bitmask \n        uint role = uint(2) ** uint(_role);\n        /// @dev comparing rights and roles, if the result is not 0 the user has the right (bitwise comparison)\n        /// we also don't have to check for a potential overflow here, because the used enum will prevent using roles that do not exist\n        return (rights & role != 0);\n    }\n}","networks":"{}"}